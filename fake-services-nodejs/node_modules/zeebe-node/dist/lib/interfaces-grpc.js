"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceType = exports.PartitionBrokerHealth = exports.PartitionBrokerRole = void 0;
// Describes the Raft role of the broker for a given partition
var PartitionBrokerRole;
(function (PartitionBrokerRole) {
    PartitionBrokerRole[PartitionBrokerRole["LEADER"] = 0] = "LEADER";
    PartitionBrokerRole[PartitionBrokerRole["BROKER"] = 1] = "BROKER";
    PartitionBrokerRole[PartitionBrokerRole["INACTIVE"] = 2] = "INACTIVE";
})(PartitionBrokerRole = exports.PartitionBrokerRole || (exports.PartitionBrokerRole = {}));
// Describes the current health of the partition
var PartitionBrokerHealth;
(function (PartitionBrokerHealth) {
    PartitionBrokerHealth[PartitionBrokerHealth["HEALTHY"] = 0] = "HEALTHY";
    PartitionBrokerHealth[PartitionBrokerHealth["UNHEALTHY"] = 1] = "UNHEALTHY";
})(PartitionBrokerHealth = exports.PartitionBrokerHealth || (exports.PartitionBrokerHealth = {}));
var ResourceType;
(function (ResourceType) {
    // FILE type means the gateway will try to detect the resource type using the file extension of the name
    ResourceType[ResourceType["FILE"] = 0] = "FILE";
    ResourceType[ResourceType["BPMN"] = 1] = "BPMN";
    ResourceType[ResourceType["YAML"] = 2] = "YAML";
})(ResourceType = exports.ResourceType || (exports.ResourceType = {}));
//# sourceMappingURL=interfaces-grpc.js.map